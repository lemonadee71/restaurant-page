{"version":3,"sources":["webpack://restaurant-page/./src/App.js","webpack://restaurant-page/./src/Router.js","webpack://restaurant-page/./src/component.js","webpack://restaurant-page/./src/event.js","webpack://restaurant-page/./src/pages/Contact.js","webpack://restaurant-page/./src/pages/Error.js","webpack://restaurant-page/./src/pages/Home.js","webpack://restaurant-page/./src/pages/Menu.js","webpack://restaurant-page/./src/pages/index.js","webpack://restaurant-page/webpack/bootstrap","webpack://restaurant-page/webpack/runtime/define property getters","webpack://restaurant-page/webpack/runtime/hasOwnProperty shorthand","webpack://restaurant-page/webpack/runtime/make namespace object","webpack://restaurant-page/./src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAmC;AACF;AACH;;AAE9B;AACA;AACA;AACA;AACA,eAAe,wCAAU;AACzB,GAAG;AACH;AACA;AACA;AACA,eAAe,wCAAU;AACzB,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe,2CAAa;AAC5B,GAAG;AACH;;AAEA,kBAAkB,4CAAI;AACtB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,YAAY,4CAAI;AAChB;AACA,8CAA8C,WAAW,IAAI,WAAW;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,gDAAM,SAAS,yCAAW,EAAE;AACtC;;AAEA,iEAAe,GAAG,EAAC;;;;;;;;;;;;;;;;;AC7C6B;AACpB;;AAE5B;AACA;AACA,0BAA0B,uDAAW;AACrC;AACA;;AAEA,EAAE,8CAAQ;AACV;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,4CAAI;AACb,YAAY,sDAAsD;AAClE;AACA;;AAEA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;AC5BtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,KAAK;AAChC,sBAAsB,SAAS,IAAI,GAAG;;AAEtC;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA,oCAAoC,GAAG;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,QAAQ,GAAG,cAAc;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,KAAK;AAClB;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,gCAAgC,aAAa;AAC7C;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,kDAAkD,GAAG;;AAErD,iDAAiD,aAAa;AAC9D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,WAAW,EAAE,KAAK,EAAE,eAAe;AACnE;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,yBAAyB,0CAA0C;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC,GAAG;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAE8D;;;;;;;;;;;;;;;ACjY9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC,cAAc;AACnD;;AAEA;AACA;AACA;;AAEA,gCAAgC,UAAU;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,UAAU;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;ACzCe;;AAEpC,sBAAsB,4CAAI;;AAE1B,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;ACJa;;AAEpC;AACA,EAAE,4CAAI;AACN;AACA;AACA,gCAAgC,wCAAwC;AACxE;AACA;AACA;AACA;;AAEA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;ACZe;;AAEpC,mBAAmB,4CAAI;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;ACVgB;;AAEpC,mBAAmB,4CAAI;;AAEvB,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;;;;;;;ACJM;AACA;AACM;AACJ;;AAEU;;;;;;;UCLtC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;ACNwB;AACa;AACT;;AAE5B;AACA,EAAE,gDAAU;AACZ,CAAC;;AAED,0BAA0B,kDAAM,CAAC,6CAAG","file":"main.js","sourcesContent":["import { html } from './component';\nimport * as pages from './pages';\nimport Router from './Router';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: pages.Home,\n  },\n  {\n    path: '/menu',\n    name: 'Menu',\n    component: pages.Menu,\n  },\n  {\n    path: 'about',\n    name: 'About Us',\n  },\n  {\n    path: '/contact',\n    name: 'Contact',\n    component: pages.Contact,\n  },\n];\n\nconst App = () => html`\n  <header class=\"header\">\n    <span class=\"header__brand title\">My Restaurant</span>\n    <nav class=\"header__nav nav\">\n      <ul class=\"nav__menu\">\n        ${routes.map(\n          (route) =>\n            html`\n              <li class=\"nav__item\">\n                <a class=\"nav__link\" href=\"#${route.path}\">${route.name}</a>\n              </li>\n            `\n        )}\n      </ul>\n    </nav>\n  </header>\n  <main>${Router(routes, pages.Error)}</main>\n`;\n\nexport default App;\n","import { html, createState } from './component';\nimport event from './event';\n\n// Will only render one component at a time\nconst Router = (routes, error) => {\n  const currentLocation = createState(\n    window.location.hash.replace('#', '') || '/'\n  );\n\n  event.on('hashchange', (path) => {\n    currentLocation.value = path;\n  });\n\n  const changeContent = (path) => {\n    const route = routes.find((route) => route.path === path);\n\n    if (!route || !route.component) {\n      return error.call(null);\n    }\n\n    return route.component.call(null);\n  };\n\n  return html`\n    <div ${{ $content: currentLocation.bindValue(changeContent) }}></div>\n  `;\n};\n\nexport default Router;\n","const uuid = (length = 12) => Math.random().toString(36).substr(2, length);\n\nconst stateStore = new Map();\nconst defaultProps = ['textContent', 'innerHTML', 'outerHTML', 'innerText'];\nconst booleanAttributes = [\n  'checked',\n  'selected',\n  'disabled',\n  'readonly',\n  'multiple',\n  'ismap',\n  'noresize',\n  'reversed',\n  'autocomplete',\n];\n\nconst isObject = (val) => typeof val === 'object';\nconst isArray = (val) => Array.isArray(val);\nconst isTemplate = (val) => val._type && val._type === 'template';\nconst isEventListeners = (val) =>\n  isObject(val) && Object.keys(val).every((key) => key.startsWith('on'));\nconst isState = (val) =>\n  isObject(val) && Object.keys(val).every((key) => key.startsWith('$'));\nconst isBooleanAttribute = (val) => booleanAttributes.includes(val);\nconst isStyleAttribute = (str) => str.startsWith('$style:');\nconst isDefaultProps = (val) =>\n  isObject(val) && Object.keys(val).every((key) => defaultProps.includes(key));\n\nconst _handlerTypeReducer = (str) => {\n  let type;\n  if (defaultProps.includes(str.replace('$', ''))) {\n    type = 'prop';\n  } else if (isStyleAttribute(str)) {\n    type = 'style';\n  } else if (str.replace('$', '') === 'content') {\n    type = 'content';\n  } else {\n    type = 'attr';\n  }\n\n  return type;\n};\n\nconst _handlerValueReducer = (type, obj) => {\n  switch (type) {\n    case 'listener':\n      return {\n        name: obj[0].replace('on', '').toLowerCase(),\n        value: obj[1],\n      };\n    case 'prop':\n      return {\n        name: obj[0].replace('$', ''),\n        value: obj[1],\n      };\n    case 'attr':\n      return {\n        name: obj[0].replace('$', ''),\n        value: obj[1],\n      };\n    case 'style':\n      return {\n        name: obj[0],\n        value: obj[1],\n      };\n    case 'text':\n      return {\n        value: obj[1],\n      };\n    case 'content':\n      return {\n        value: obj[1],\n      };\n    default:\n      throw new Error('Invalid handler type.');\n  }\n};\n\nconst _generateHandler = (type, obj) => {\n  const arr = [];\n  const id = uuid();\n  const attrName = `data-${type}-id`;\n  const dataAttr = `${attrName}=\"${id}\"`;\n\n  Object.entries(obj).forEach((item) => {\n    arr.push({\n      type,\n      query: `[${dataAttr}]`,\n      data: _handlerValueReducer(type, item),\n      attr: attrName,\n      remove: false,\n    });\n  });\n\n  arr[arr.length - 1].remove = true;\n\n  return [arr, dataAttr];\n};\n\nconst _bindState = (state) => {\n  const id = uuid();\n  const proxyId = `data-proxy-id=\"${id}\"`;\n  const handlers = {};\n\n  Object.entries(state).forEach(([key, handler]) => {\n    const bindedElements = stateStore.get(handler._id);\n    const existingHandlers = bindedElements.get(id) || [];\n\n    const finalValue = handler.trap\n      ? handler.trap.call(null, handler.value)\n      : handler.value;\n    const target = key.replace('$style:', '').replace('$', '');\n    const type = _handlerTypeReducer(key);\n\n    // Store the new handlers\n    bindedElements.set(id, [\n      ...existingHandlers,\n      {\n        type,\n        target,\n        propName: handler.propName,\n        trap: handler.trap,\n      },\n    ]);\n\n    if (!handlers[type]) {\n      handlers[type] = {};\n    }\n\n    handlers[type][target] = finalValue;\n  });\n\n  const [allHandlers, str] = Object.entries(handlers)\n    .map(([type, obj]) => _generateHandler(type, obj))\n    .reduce(\n      (prev, current) => [\n        [...prev[0], ...current[0]],\n        [...prev[1], current[1]],\n      ],\n      [[], []]\n    );\n\n  return [allHandlers, `${proxyId} ${str.join(' ')}`];\n};\n\n// return value is [str, array]\nconst _parser = (expr, handlers = []) => {\n  // if expr is array, map and parse each item\n  // items must be all strings after parsing\n  if (isArray(expr)) {\n    const [strArray, handlersArray] = expr\n      .map((item) => _parser(item, handlers))\n      .reduce(\n        (prev, current) => [\n          [...prev[0], current[0]],\n          [...prev[1], ...current[1]],\n        ],\n        [[], []]\n      );\n\n    return [strArray.join(''), handlersArray];\n  }\n\n  // if template\n  // add its handlers to ours\n  // then return the string\n  if (isTemplate(expr)) {\n    return [expr[0], [...handlers, ...expr[1]]];\n  }\n\n  // if Object and that object contains only keys which name is an event\n  // generate a temporary id and replace the object with it\n  // then add the event listeners to our handlers\n  if (isEventListeners(expr)) {\n    const [eventHandlers, id] = _generateHandler('listener', expr);\n\n    return [id, [...handlers, ...eventHandlers]];\n  }\n\n  if (isState(expr)) {\n    const [propHandlers, id] = _bindState(expr);\n    return [id, [...handlers, ...propHandlers]];\n  }\n\n  if (isDefaultProps(expr)) {\n    const [defaultPropHandlers, id] = _generateHandler('prop', expr);\n    return [id, [...handlers, ...defaultPropHandlers]];\n  }\n\n  // if none of our accepted types, assume it is string\n  // then just return it\n  return [`${expr}`, []];\n};\n\nconst _createTemplate = (arr) => {\n  const arrayLikeObj = {};\n\n  arr.forEach((i, idx) => {\n    arrayLikeObj[idx] = arr[idx];\n  });\n\n  arrayLikeObj.length = arr.length;\n  arrayLikeObj._type = 'template';\n\n  Object.defineProperty(arrayLikeObj, '_type', {\n    enumerable: false,\n  });\n\n  return arrayLikeObj;\n};\n\nconst _replacePlaceholders = (str) => {\n  let newString = str;\n  let match = newString.match(/{%\\s*(.*)\\s*%}/);\n  const handlers = [];\n\n  while (match) {\n    const [textHandlers, id] = _generateHandler('text', {\n      text: match[1].trim(),\n    });\n\n    handlers.push(...textHandlers);\n\n    newString = newString.replace(match[0], `<i ${id}></i>`);\n\n    match = newString.slice(match.index).match(/{%\\s*(.*)\\s*%}/);\n  }\n\n  return [newString, handlers];\n};\n\nconst parseString = (strings, ...exprs) => {\n  const [evaluatedExprs, handlers] = exprs\n    .map((expr) => _parser(expr))\n    .reduce(\n      (prev, current) => [\n        [...prev[0], current[0]],\n        [...prev[1], ...current[1]],\n      ],\n      [[], []]\n    );\n\n  const htmlString = evaluatedExprs.reduce(\n    (fullString, expr, i) => `${fullString}${expr}${strings[i + 1]}`,\n    strings[0]\n  );\n\n  const [sanitizedString, textHandlers] = _replacePlaceholders(htmlString);\n  handlers.push(...textHandlers);\n\n  return _createTemplate([sanitizedString, handlers]);\n};\n\nconst html = (strings, ...exprs) => parseString(strings, ...exprs);\n\nconst _modifyElement = ({ element, type, data, context = document }) => {\n  const el = context.querySelector(element);\n\n  switch (type) {\n    case 'prop':\n      el[data.name] = data.value;\n      break;\n    case 'attr':\n      if (isBooleanAttribute(data.name)) {\n        if (data.value) {\n          el.setAttribute(data.name, '');\n        } else {\n          el.removeAttribute(data.name);\n        }\n      } else {\n        el.setAttribute(data.name, data.value);\n      }\n\n      break;\n    case 'listener':\n      el.addEventListener(data.name, data.value);\n      break;\n    case 'text':\n      el.replaceWith(document.createTextNode(data.value));\n      break;\n    case 'style':\n      el.style[data.name] = data.value;\n      break;\n    case 'content':\n      [...el.children].map((child) => child.remove());\n\n      el.appendChild(\n        data.value instanceof HTMLElement\n          ? data.value\n          : render(html`${data.value}`)\n      );\n\n      break;\n    default:\n      throw new Error('Invalid type.');\n  }\n};\n\nconst createElementFromString = (str, handlers = []) => {\n  const createdElement = document.createRange().createContextualFragment(str);\n\n  handlers.forEach((handler) => {\n    const el = createdElement.querySelector(handler.query);\n\n    if (!el) return;\n\n    _modifyElement({\n      element: handler.query,\n      type: handler.type,\n      data: handler.data,\n      context: createdElement,\n    });\n\n    if (handler.remove) {\n      el.removeAttribute(handler.attr);\n    }\n  });\n\n  return createdElement;\n};\n\nconst render = (template) => createElementFromString(...Array.from(template));\n\nconst _setHandler = (stateId) => ({\n  set: (target, prop, value, receiver) => {\n    const bindedElements = stateStore.get(stateId);\n\n    bindedElements.forEach((handlers, id) => {\n      const query = `[data-proxy-id=\"${id}\"]`;\n      const el = document.querySelector(query);\n\n      if (el) {\n        handlers.forEach((handler) => {\n          if (prop !== handler.propName) return;\n\n          const finalValue = handler.trap\n            ? handler.trap.call(null, value)\n            : value;\n\n          _modifyElement({\n            element: query,\n            type: handler.type,\n            data: { name: handler.target, value: finalValue },\n          });\n        });\n      } else {\n        // delete handler when the target is unreachable (most likely deleted)\n        bindedElements.delete(id);\n      }\n    });\n\n    return Reflect.set(target, prop, value, receiver);\n  },\n});\n\nconst createState = (initValue = null) => {\n  const _id = uuid();\n  // Map contains id keys\n  // id keys are proxy ids of elements binded to the state\n  stateStore.set(_id, new Map());\n\n  const state = {\n    bindValue: (trap = null) => ({\n      propName: 'value',\n      trap,\n      _id,\n      value: state.value,\n    }),\n    bind: (propName = 'value', trap = null) => ({\n      propName,\n      trap,\n      _id,\n      value: propName === 'value' ? state.value : state.value[propName],\n    }),\n  };\n\n  if (isObject(initValue)) {\n    state.value = new Proxy(initValue, _setHandler(_id));\n  } else {\n    state.value = initValue;\n  }\n\n  return new Proxy(state, _setHandler(_id));\n};\n\nexport { html, render, createElementFromString, createState };\n","class EventEmitter {\n  constructor() {\n    this.events = new Map();\n  }\n\n  on(eventName, fn, options) {\n    if (!this.events.has(eventName)) {\n      this.events.set(eventName, []);\n    }\n\n    this.events.get(eventName).push({ fn, options });\n  }\n\n  off(eventName, fn) {\n    let handlers = this.events.get(eventName);\n    handlers = handlers.filter((handler) => handler.fn !== fn);\n\n    console.log(`Shutting off ${eventName}...`);\n    this.events.set(eventName, handlers);\n  }\n\n  clear() {\n    this.events.clear();\n  }\n\n  emit(eventName, payload = null) {\n    console.log(`${eventName} event emitted... `);\n    const handlers = this.events.get(eventName) || [];\n\n    handlers.forEach((handler) => {\n      handler.fn.call(null, payload);\n\n      if (handler.options && handler.options.once) {\n        this.off(eventName, handler.fn);\n      }\n    });\n  }\n}\n\nconst event = new EventEmitter();\n\nexport default event;\n","import { html } from '../component';\n\nconst Contact = () => html`<h1 class=\"header-text\">This is my contact</h1>`;\n\nexport default Contact;\n","import { html } from '../component';\n\nconst Error = () =>\n  html`\n    <div class=\"error\">\n      <h1 class=\"error__message\">Page not found</h1>\n      <p class=\"error__link\" ${{ onClick: () => window.history.back() }}>\n        Go back\n      </p>\n    </div>\n  `;\n\nexport default Error;\n","import { html } from '../component';\n\nconst Home = () => html`\n  <h1 class=\"text--title\">Lorem ipsum dolor sit amet.</h1>\n  <p>\n    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ipsum, accusamus!\n  </p>\n  <div><button>Order now</button><a href=\"#/menu\">See menu</a></div>\n`;\n\nexport default Home;\n","import { html } from '../component';\n\nconst Menu = () => html`<h1 class=\"header-text\">This is my Menu</h1>`;\n\nexport default Menu;\n","import Home from './Home';\nimport Menu from './Menu';\nimport Contact from './Contact';\nimport Error from './Error';\n\nexport { Home, Menu, Contact, Error };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import App from './App';\nimport { render } from './component';\nimport event from './event';\n\nwindow.addEventListener('hashchange', () => {\n  event.emit('hashchange', window.location.hash.replace('#', ''));\n});\n\ndocument.body.appendChild(render(App()));\n"],"sourceRoot":""}